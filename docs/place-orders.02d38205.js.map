{"version":3,"sources":["ts/dto/CustomerSet.ts","ts/dto/ItemsAdded.ts","ts/dto/ItemSet.ts","ts/place-orders.ts"],"names":[],"mappings":";AAIK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAJQ,IAAA,EACT,SAAmB,EAAA,EACR,GAAW,EAAA,KAAA,GADH,KAAA,GAAA,EACR,KAAA,KAAA,GAEV,QAAA,YAAA;;ACCI,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EALI,IAAA,EACT,SAA0B,EAAA,EACf,EACA,GAAiB,EAAA,KAAA,GAFF,KAAA,eAAA,EACf,KAAA,aAAA,EACA,KAAA,UAAA,GAEN,QAAA,WAAA;;ACAA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EALI,IAAA,EACT,SAA0B,EAAA,EACf,EACA,GAAiB,EAAA,KAAA,GAFF,KAAA,KAAA,EACf,KAAA,IAAA,EACA,KAAA,UAAA,GAEN,QAAA,QAAA;;ACugBR,aA3gBD,IAAA,EAAA,QAAA,qBAEA,EAAA,QAAA,oBACA,EAAA,QAAA,iBAwgBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAngBD,IAYI,EAIA,EACA,EAjBE,EAAW,4BACX,EAA4B,GAAA,OAAA,EAAlC,WACM,EAA2B,GAAA,OAAA,EAAjC,cACM,EAAuB,GAAA,OAAA,EAA7B,UACM,EAAY,EAEd,EAA2B,GAC3B,EAA6B,GAC7B,EAAqB,GACrB,EAAkC,GAClC,EAA0B,GAC1B,EAAiC,GAEjC,EAAc,EACd,EAAiB,EACjB,EAAa,EAGb,EAAuB,GACvB,EAAe,EACf,EAAY,EACZ,EAAQ,EACR,EAAY,EA+MhB,SAAS,IACD,EAAsB,EAAE,4BAA4B,OAGjC,IAJX,EAIW,EAAA,EAAA,GAJX,IAIwB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAzB,IAAA,EAAyB,EAAA,MAE7B,EAAS,KAAO,GACf,EAAE,aAAa,IAAI,EAAS,OAPxB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAYhB,SAAS,IACL,EAAoB,EAAE,6BAA6B,OAIhC,IALA,EAKA,EAAA,EAAA,GALA,IAKS,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjB,IAAA,EAAiB,EAAA,MAEpB,EAAI,EAAiB,MAAM,KAG5B,EAAK,OAAS,EAAE,GAAG,QAElB,EAAE,eAAe,IAAI,EAAK,YAZf,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAkBvB,SAAS,IAEC,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,GAAA,EAAK,aAAe,EAAK,KAAM,CAE3B,GAAgB,MAAhB,EAAK,OAEL,YADA,MAAM,6CAIV,IAAgB,EAAK,kBAAkB,iBAAkB,IACzD,EAAS,KAAK,MAAM,EAAK,cAEzB,EAAE,wBAAwB,SAE1B,EAAO,QAAQ,SAAC,GACN,IAAA,EACC,8BAAA,OAAA,EAAG,QACH,gCAAA,OAAA,EAAG,WACH,gCAAA,OAAA,EAAG,aACH,gCAAA,OAAA,EAAG,UACH,gCAAA,OAAA,EAAG,WALV,iCAQA,EAAE,qBAAqB,OAAO,KAGlC,MAOJ,EAAK,KAAK,MAAO,EAAkC,SAAA,OAAA,EAAqB,UAAA,OAAA,IAAa,GAIrF,EAAK,OAIb,SAAS,IAEC,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,GAAA,EAAK,aAAe,EAAK,KAAM,CAE3B,GAAgB,MAAhB,EAAK,OAEL,YADA,MAAM,4CAIV,IAAmB,EAAK,kBAAkB,iBAAmB,IAC7D,EAAY,KAAK,MAAM,EAAK,cAExB,IAAA,EAAM,GACV,EAAc,GACT,IAAA,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IAElC,GAAmB,WAAA,OAAA,EAAU,GAAG,GAAhC,aACA,EAAY,KAAK,IAAI,EAAJ,YAAgB,EAAU,GAAG,GAAI,EAAU,GAAG,OAEnE,EAAE,YAAY,KAAK,KAOvB,EAAK,KAAK,MAAO,GAAuB,GAIxC,EAAK,OAKb,SAAS,IACC,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,GAAA,EAAK,aAAe,EAAK,KAAM,CAK3B,GAAgB,MAAhB,EAAK,OAEL,YADA,MAAM,wCAIV,IAAe,EAAK,kBAAkB,iBAAmB,IACzD,EAAQ,KAAK,MAAM,EAAK,cAInB,IADD,IAAA,EAAM,GACD,EAAI,EAAG,EAAI,EAAM,OAAQ,IAE9B,GAAmB,WAAA,OAAA,EAAM,GAAG,KAAU,OAAA,OAAA,EAAM,GAAG,YAA/C,aACA,EAAQ,KAAK,IAAI,EAAJ,QAAY,EAAM,GAAG,KAAM,EAAM,GAAG,UAAW,EAAM,GAAG,YAEzE,EAAE,aAAa,KAAK,KAOxB,EAAK,KAAK,MAAO,GAAmB,GAIpC,EAAK,OAIb,SAAS,EAAU,GACT,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,GAAA,EAAK,aAAe,EAAK,KAAzB,CAEA,GAAgB,MAAhB,EAAK,OAGL,OAFA,QAAQ,MAAM,EAAK,mBACnB,MAAM,sCAIV,MAAM,wCAEN,IAGA,EAFA,EAAY,KAAK,KAAK,EAAiB,IAGvC,EAAE,oCAAoC,IAAI,IAC1C,EAAE,WAAW,QAAQ,WAGzB,EAAK,KAAK,OAAQ,GAAuB,GAEzC,EAAK,iBAAiB,eAAgB,oBAM1C,SAAS,EAAe,GACd,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,GAAA,EAAK,aAAe,EAAK,KAAM,CAE3B,GAAgB,MAAhB,EAAK,OAEL,YADA,MAAM,4CAIV,IAEA,EADA,EAAY,KAAK,KAAK,EAAiB,MAO/C,EAAK,KAAK,SAAU,EAA+B,OAAA,OAAA,IAAM,GAEzD,EAAK,OAIT,SAAS,EAAe,GACd,IAAA,EAAO,IAAI,eAEjB,EAAK,mBAAqB,WAElB,EAAK,aAAe,EAAK,OAET,MAAhB,EAAK,QAKT,MAAM,0CAEN,EAAE,oCAAoC,KAAK,mBAAmB,KAAK,EAAE,aAAa,MAAQ,IAC1F,EAAE,oCAAoC,KAAK,mBAAmB,KAAK,EAAE,gBAAgB,MAAQ,IAC7F,EAAE,oCAAoC,IAAI,IAC1C,EAAE,WAAW,QAAQ,SACrB,EAAE,oCAAoC,YAAY,YAClD,EAAE,WAAW,WAAW,aAXpB,MAAM,0CAed,EAAK,KAAK,MAAO,GAAuB,GAExC,EAAK,iBAAiB,eAAgB,oBAEtC,EAAK,KAAK,KAAK,UAAU,IAK7B,SAAS,IAKD,GAHJ,EAAY,KAAK,KAAK,EAAc,GAEpC,IACkB,IAAd,EAAA,CAIC,IAFD,IAAA,EAAJ,yEAES,EAAI,EAAG,EAAI,EAAW,IAC3B,GAAgC,wBAAA,OAAA,IAAkB,EAAI,EAAK,SAAW,GAAuD,sDAAA,OAAA,EAAI,EAAjI,aAGJ,GAAA,sFAEA,EAAE,iBAAiB,KAAK,GAEH,IAAjB,EACA,EAAE,0BAA0B,SAAS,YAC9B,IAAiB,GACxB,EAAE,yBAAyB,SAAS,YAGxC,EAAE,0BAA0B,GAAG,QAAS,WAAM,OAAA,EAAe,EAAe,KAC5E,EAAE,yBAAyB,GAAG,QAAS,WAAM,OAAA,EAAe,EAAe,KAE3E,EAAE,iEAAiE,GAAG,QAAS,WAC3E,GAAgB,EAAE,MAAM,WAKhC,SAAS,EAAe,GAEhB,EAAO,GAAK,EAAO,IAEvB,EAAe,EACf,KAIJ,SAAS,IACL,EAAY,EAAI,EAAE,eAAe,OAAS,EAAE,eAAe,OAxe/D,IACA,IACA,IACA,IAMA,EAAE,aAAa,GAAG,WAAY,cAK9B,EAAE,iBAAiB,GAAG,QAAS,SAAC,GAC5B,EAAU,iBAEN,IACA,EACA,EACA,EAOG,GALP,EAAK,EAAE,6BAA6B,OACpC,EAAgB,EAAE,aAAa,MAC/B,EAAQ,EAAE,eAAe,MAGX,OAAP,EAIC,OAHA,MAAM,gCACN,EAAE,aAAa,QAAQ,SAAS,QAAQ,eAC7B,EAMZ,GAAgB,GAAhB,EAIC,OAHA,MAAM,4BACN,EAAE,aAAa,QAAQ,SAAS,QAAQ,eAC7B,EAIZ,GAAS,GAAT,EAIC,OAHA,MAAM,yDACN,EAAE,eAAe,QAAQ,SAAS,QAAQ,eAC/B,EAIf,IAAA,EAAgB,IAAI,EAAJ,WAAe,EAAI,EAAc,GACrD,EAAY,KAAK,GAGZ,IADD,IAAA,EAAM,GACD,EAAI,EAAG,EAAI,EAAY,OAAQ,IAExC,GAAmB,WAAA,OAAA,EAAY,GAAG,eAAlC,aACI,EAAQ,KAAK,IAAI,EAAJ,QAAY,EAAM,GAAG,KAAM,EAAM,GAAG,UAAW,EAAM,GAAG,YAEzE,EAAE,gBAAgB,KAAK,GAIvB,EAAE,aAAa,IAAI,GACnB,EAAE,aAAa,QAAQ,SAAS,QAAQ,UAExC,EAAY,EAAc,UAAY,EAAc,aAEpD,QAAQ,IAAI,GAEZ,GAAS,EAET,EAAE,cAAc,KAAK,UAAY,GAEjC,EAAE,oBAAoB,QAAQ,WAKlC,EAAE,uBAAuB,GAAG,SAAU,WAElC,QAAQ,IAAI,aAMhB,EAAE,aAAa,GAAG,QAAS,SAAC,GACxB,EAAU,iBAEN,IAAA,GAAuB,EAAE,cAAgB,IAAI,MAAM,KACjD,EAAa,EAAE,aACf,EAAW,EAAE,YACb,EAAa,EAAE,aAEf,GAAS,EAEf,QAAQ,IAAI,GAGZ,EAAY,QAAQ,SAAA,MAKhB,IAAA,EAAW,EAAW,MAAiB,OAEvC,GADS,EAAS,MAAiB,OACnB,EAAW,MAAiB,QAgC5C,GA7BJ,EAAE,kCAAkC,YAAY,cAG7C,GAAS,IACR,EAAE,cAAc,SAAS,cACzB,MAAM,2BACM,GAtByB,GAyBvB,QAAU,IAGZ,EAGX,eAAe,KAAK,KACrB,EAAW,SAAS,cACpB,EAAW,QAAQ,WACP,GAGX,YAAY,KAAK,KAClB,EAAW,SAAS,cACpB,EAAW,QAAQ,WACP,GAKZ,EAAW,KAAK,YAEI,EAAE,yCAO1B,QAAQ,KAAI,IAAI,MAAO,wBAO3B,EAAE,wBAAwB,GAAG,QAAS,YAAa,SAAU,GACrD,QAAQ,4BACR,EAAgB,EAAE,EAAU,QAAQ,QAAQ,MAAM,KAAK,kBAAmB,UAKlF,EAAE,cAAc,GAAG,QAAS,WACxB,EAAE,oCAAoC,YAAY,YAClD,EAAE,WAAW,WAAW,YAAY,QAAQ,SAC5C,EAAE,WAAW,WAAW,cAI5B,EAAE,wBAAwB,GAAG,QAAS,KAAM,WAElC,IAAA,EAAK,EAAE,MAAM,KAAK,kBAAkB,OACpC,EAAO,EAAE,MAAM,KAAK,mBAAmB,OACvC,EAAU,EAAE,MAAM,KAAK,mBAAmB,OAEhD,EAAE,WAAW,IAAI,GAAI,KAAK,WAAY,QACtC,EAAE,aAAa,IAAI,GACnB,EAAE,gBAAgB,IAAI,GAEtB,EAAE,2BAA2B,YAAY,YACzC,EAAE,MAAM,SAAS,cAMrB,EAAE,YAAY,GAAG,SAAU,WACvB,MAKJ,EAAE,aAAa,GAAG,SAAU,WACxB","file":"place-orders.02d38205.js","sourceRoot":"..","sourcesContent":["export class CustomerSet{\n    constructor(public id:string,\n        public name:string){\n\n    }\n}","export class ItemsAdded{\n    public constructor(public itemIdentifier:string,\n        public requestedQty: number,\n        public unitPrice: number){\n\n        }\n}","export class ItemSet{\n    public constructor(public code:string,\n        public qty:number,\n        public unitPrice: number){\n\n        }\n}","import { Customer } from './dto/customer';\nimport { CustomerSet } from './dto/CustomerSet';\nimport { Item } from './dto/item';\nimport { ItemsAdded } from './dto/ItemsAdded';\nimport { ItemSet } from './dto/ItemSet';\nimport { OrderList } from './dto/OrderList';\nimport { PlacedOrder } from './dto/PlacedOrder';\n\n\nconst BASE_API = 'http://localhost:8080/pos';\nconst PLACEORDER_SERVICE_API = `${BASE_API}/orders`;\nconst CUSTOMERS_SERVICE_API = `${BASE_API}/customers`;\nconst STOCK_SERVICE_API = `${BASE_API}/items`;\nconst PAGE_SIZE = 6;\n\nlet orders: Array<OrderList> = [];\nlet customers: Array<Customer> = [];\nlet items: Array<Item> = [];\nlet customerSet: Array<CustomerSet> = [];\nlet itemSet: Array<ItemSet> = [];\nlet listOfItems: Array<ItemsAdded> = [];\nlet placedOrder: PlacedOrder;\nlet totalOrders = 0;\nlet totalCustomers = 0;\nlet totalItems = 0;\nlet selectedCustomerId: undefined|string;\nlet selectedItemCode: undefined|string;\nlet selectedCustomerName = '';\nlet selectedPage = 1;\nlet pageCount = 1;\nlet total = 0;\nlet itemTotal = 0;\n\n\n\nloadAllOrders();\nloadAllCustomers();\nloadAllItems();\ngetName();\n\n\n\n/* EVENTS */\n\n$('#item-qty').on('keypress', ()=>{\n    \n});\n\n/* Item Add Button Event */\n$('#btn-add-item').on('click', (eventData)=>{\n    eventData.preventDefault();\n\n    let validate = true;\n    let id = \"\";\n    let requestedQty = -1;\n    let price = -1;\n    \n    id = $('#item-ids option:selected').text() as string;\n    requestedQty = ($('#item-qty').val()) as number;\n    price = $('#item-price').val() as number;\n    \n    /* validations */\n        if(id === null){\n            alert(\"Please select an Item first!\");\n            $('#item-ids').trigger('focus').trigger('select');\n            validate = false;\n            return;\n        }\n\n        \n\n        if(requestedQty == 0 ){\n            alert(\"Please enter a quantity!\");\n            $('#item-qty').trigger('focus').trigger('select');\n            validate = false;\n            return;\n        }\n\n        if(price == 0.00){\n            alert(\"Something wrong with loading item data. Try again...!\");\n            $('#item-price').trigger('focus').trigger('select');\n            validate = false;\n            return;\n        }\n\n    let itemToBeAdded = new ItemsAdded(id, requestedQty, price);\n    listOfItems.push(itemToBeAdded);\n\n    let html ='';\n    for (let i = 0; i < listOfItems.length; i++) {\n                \n    html += `<option>${listOfItems[i].itemIdentifier}</option>`;\n        itemSet.push(new ItemSet(items[i].code, items[i].qtyOnHand, items[i].unitPrice));\n    }\n    $(\"#added-items\").html(html);\n    \n    \n    /* Clear item input set */\n    $('#item-qty').val(0);\n    $('#item-ids').trigger('focus').trigger('select');\n    \n    itemTotal = itemToBeAdded.unitPrice * itemToBeAdded.requestedQty;\n\n    console.log(itemTotal);\n    \n    total += itemTotal;\n      \n    $('#txt-total').text(\"Total: \" + total); \n\n    $('#btn-remove-item').trigger('click');\n    \n});\n\n/* Item selection Event */\n$('#added-items>option').on('select', ()=>{\n\n    console.log(\"working\");\n    \n\n});\n\n/* Save Button Event */\n$('#btn-save').on('click', (eventData) => {\n    eventData.preventDefault();\n\n    let tempTotal: string[] = ($('#txt-total') + \"\").split(':');\n    const txtOrderId = $('#order-id');\n    const txtCusId = $('#cus-ids');\n    const txtCusName = $('#cus-name');\n    const arrayItemList: Array<ItemsAdded> = [];\n    const total = +tempTotal;\n\n    console.log(listOfItems);\n    \n\n    listOfItems.forEach(i =>{\n    \n    });\n    \n   \n    let orderId = (txtOrderId.val() as string).trim();\n    let cusId = (txtCusId.val() as string).trim();\n    let customerName = (txtCusName.val() as string).trim();\n\n    let validated = true;\n    $('#order-id, #cus-ids, #cus-name').removeClass('is-invalid');\n\n\n    if(total <= 0){\n        $('#txt-total').addClass('is-invalid');\n        alert(\"Order Total is invalid\")\n        validated = false;\n    }\n\n    if (arrayItemList.length <= 0) {\n        // txtAddress.addClass('is-invalid');\n        // txtAddress.trigger('select');\n        validated = false;\n    }\n\n    if (!/^[A-Za-z ]+$/.test(customerName)) {\n        txtCusName.addClass('is-invalid');\n        txtCusName.trigger('select');\n        validated = false;\n    }\n\n    if (!/^OD\\d{3}$/.test(orderId)) {\n        txtOrderId.addClass('is-invalid');\n        txtOrderId.trigger('select');\n        validated = false;\n    }\n\n    // if (!validated) return;\n\n    if (txtOrderId.attr('disabled')) {\n\n        const selectedRow = $(\"#tbl-customers tbody tr.selected\");\n        // updateCustomer(new Customer(id, cusId, address));\n        return;\n    }\n\n\n\n    console.log(new Date().toLocaleDateString());\n    \n    \n    // saveOrder(new PlacedOrder( orderId,, cusId));\n});\n\n/* Delete Button Event */\n$('#tbl-customers tbody').on('click', '#trash-td', function (eventData) {\n    if (confirm('Are you sure to delete?')) {\n        deleteCustomer(($(eventData.target).parents(\"tr\").find('td:first-child')).text());\n    }\n});\n\n/* Clear Button Event */\n$('#btn-clear').on('click', () => {\n    $(\"#tbl-customers tbody tr.selected\").removeClass('selected');\n    $(\"#txt-id\").removeAttr('disabled').trigger('focus');\n    $('#txt-id').removeAttr('disabled');\n});\n\n/* Table row selection */\n$('#tbl-customers tbody').on('click', 'tr', function () {\n\n    const id = $(this).find(\"td:first-child\").text();\n    const name = $(this).find(\"td:nth-child(2)\").text();\n    const address = $(this).find(\"td:nth-child(3)\").text();\n\n    $('#txt-id').val(id).attr('disabled', \"true\");\n    $('#txt-name').val(name);\n    $('#txt-address').val(address);\n\n    $(\"#tbl-customers tbody tr\").removeClass('selected');\n    $(this).addClass('selected');\n\n});\n\n\n/* Get the name of the selected customer */\n$('#cus-ids').on('change', ()=>{\n    getName();\n     \n});\n\n/* Get details of the selected item */\n$('#item-ids').on('change', ()=>{\n    getItemDetails();\n\n});\n\n\n/////////////////////////////////////////////\n    \n/* FUNCTIONS */\n\n/* get the name of current customer */\nfunction getName():void{\n        selectedCustomerId = ($('#cus-ids option:selected').text());\n    \n    \n    for (const customer of customerSet) {\n        \n        if(customer.id === selectedCustomerId){\n            $('#cus-name').val(customer.name);  \n        } \n    }\n}\n\nfunction getItemDetails() : void{\n    selectedItemCode = ($('#item-ids option:selected').text());\n   // console.log(selectedItemCode);\n    \n    \n    for (const item of itemSet) {\n\n        let x = selectedItemCode.split('-');\n        \n        \n        if(item.code === x[0].trim()){\n            \n            $('#item-price').val(item.unitPrice);  \n        } \n    }\n}\n\n/* Load customers */\nfunction loadAllOrders(): void {\n\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = ()=> {\n\n        if (http.readyState === http.DONE) {\n\n            if (http.status !== 200) {\n                alert(\"Failed to fetch order List, try again...!\");\n                return;\n            }\n\n            totalOrders = +(http.getResponseHeader('X-Total-Count')+ \"\");\n            orders = JSON.parse(http.responseText);\n\n            $('#tbl-orders tbody tr').remove();\n\n            orders.forEach((od) => {\n                const rowHtml = `<tr>\n                 <td>${od.orderId}</td>\n                 <td>${od.customerId}</td>\n                 <td>${od.customerName}</td>\n                 <td>${od.orderDate}</td>\n                 <td>${od.orderTotal}</td>\n                 </tr>` ;\n\n                $('#tbl-orders tbody').append(rowHtml);\n            });\n\n            initPagination();\n\n        }\n\n    };\n\n        // http://url?page=10&size=10\n        http.open('GET', PLACEORDER_SERVICE_API + `?page=${selectedPage}&size=${PAGE_SIZE}`, true);\n\n        // 4. Setting headers, etc.\n    \n        http.send();\n}\n\n/* Load customers */\nfunction loadAllCustomers(): void {\n\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = ()=> {\n\n        if (http.readyState === http.DONE) {\n\n            if (http.status !== 200) {\n                alert(\"Failed to fetch customers, try again...!\");\n                return;\n            }\n\n            totalCustomers = +(http.getResponseHeader('X-Total-Count') + \"\");\n            customers = JSON.parse(http.responseText);\n\n            let html ='';\n            customerSet = [];\n            for (let i = 0; i < customers.length; i++) {\n                // console.log(customers[i].id, customers[i].name);   \n                html += `<option>${customers[i].id}</option>`;\n                customerSet.push(new CustomerSet(customers[i].id, customers[i].name));\n            }\n            $(\"#cus-ids\").html(html);\n\n        }\n\n    };\n\n        // http://url?page=10&size=10\n        http.open('GET', CUSTOMERS_SERVICE_API, true);\n\n        // 4. Setting headers, etc.\n    \n        http.send();\n    \n}\n\n/* load items */\nfunction loadAllItems():void{\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = ()=> {\n\n        if (http.readyState === http.DONE) {\n\n           // console.log(http.status);\n            \n\n            if (http.status !== 200) {\n                alert(\"Failed to fetch items, try again...!\");\n                return;\n            }\n\n            totalItems = +(http.getResponseHeader('X-Total-Count') + \"\");\n            items = JSON.parse(http.responseText);\n\n            \n            let html ='';\n            for (let i = 0; i < items.length; i++) {\n                // console.log(customers[i].id, customers[i].name);   \n                html += `<option>${items[i].code} - ${items[i].description}</option>`;\n                itemSet.push(new ItemSet(items[i].code, items[i].qtyOnHand, items[i].unitPrice));\n            }\n            $(\"#item-ids\").html(html);\n\n        }\n\n    };\n\n        // http://url?page=10&size=10\n        http.open('GET', STOCK_SERVICE_API, true);\n\n        // 4. Setting headers, etc.\n    \n        http.send();\n}\n\n/* Save customers */\nfunction saveOrder(order: PlacedOrder): void{\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = () => {\n\n        if (http.readyState !== http.DONE) return;\n\n        if (http.status !== 201) {\n            console.error(http.responseText);\n            alert(\"Failed to save the customer, retry\");\n            return;\n        }\n\n        alert(\"Customer has been saved successfully\");\n\n        totalCustomers++;\n        pageCount = Math.ceil(totalCustomers / PAGE_SIZE);\n\n        navigateToPage(pageCount);\n        $('#txt-id, #txt-name, #txt-address').val('');\n        $('#txt-id').trigger('focus');\n    };\n\n    http.open('POST', CUSTOMERS_SERVICE_API, true);\n\n    http.setRequestHeader('Content-Type', 'application/json');\n\n    // http.send(JSON.stringify(customer));\n}\n\n/* Delete customers */\nfunction deleteCustomer(id: string): void {\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = () => {\n\n        if (http.readyState === http.DONE) {\n\n            if (http.status !== 204) {\n                alert(\"Failed to delete customer, try again...!\");\n                return;\n            }\n\n            totalCustomers--;\n            pageCount = Math.ceil(totalCustomers / PAGE_SIZE);            \n            navigateToPage(pageCount);\n\n        }\n\n    };\n\n    http.open('DELETE', CUSTOMERS_SERVICE_API + `?id=${id}`, true);\n\n    http.send();\n}\n\n/* Update customer */\nfunction updateCustomer(customer: Customer): void {\n    const http = new XMLHttpRequest();\n\n    http.onreadystatechange = () => {\n\n        if (http.readyState !== http.DONE) return;\n\n        if (http.status !== 204) {\n            alert(\"Failed to update the customer, retry\");\n            return;\n        }\n\n        alert(\"Customer has been updated successfully\");\n        \n        $(\"#tbl-customers tbody tr.selected\").find(\"td:nth-child(2)\").text($(\"#txt-name\").val() + \"\");\n        $(\"#tbl-customers tbody tr.selected\").find(\"td:nth-child(3)\").text($(\"#txt-address\").val() + \"\");\n        $('#txt-id, #txt-name, #txt-address').val('');\n        $('#txt-id').trigger('focus');\n        $(\"#tbl-customers tbody tr.selected\").removeClass('selected');\n        $('#txt-id').removeAttr('disabled');\n\n    };\n\n    http.open('PUT', CUSTOMERS_SERVICE_API, true);\n\n    http.setRequestHeader('Content-Type', 'application/json');\n\n    http.send(JSON.stringify(customer));\n\n}\n\n/* NAVIGATIONS */\nfunction initPagination(): void {\n\n    pageCount = Math.ceil(totalOrders / PAGE_SIZE);\n\n    showOrHidePagination();\n    if (pageCount === 1) return;\n\n    let html = `<li class=\"page-item\"><a class=\"page-link\" href=\"#!\">Previous</a></li>`;\n\n    for (let i = 0; i < pageCount; i++) {\n        html += `<li class=\"page-item ${selectedPage === (i + 1) ? 'active' : ''}\"><a class=\"page-link\" href=\"javascript:void(0);\">${i + 1}</a></li>`;\n    }\n\n    html += `<li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0);\">Next</a></li>`;\n\n    $(\"ul.pagination\").html(html);\n\n    if (selectedPage === 1) {\n        $(\".page-item:first-child\").addClass('disabled');\n    } else if (selectedPage === pageCount) {\n        $(\".page-item:last-child\").addClass('disabled');\n    }\n\n    $(\".page-item:first-child\").on('click', () => navigateToPage(selectedPage - 1));\n    $(\".page-item:last-child\").on('click', () => navigateToPage(selectedPage + 1));\n\n    $(\".page-item:not(.page-item:first-child, .page-item:last-child)\").on('click', function () {\n        navigateToPage(+$(this).text());\n    });\n\n}\n\nfunction navigateToPage(page: number): void {\n\n    if (page < 1 || page > pageCount) return;\n\n    selectedPage = page;\n    loadAllOrders();\n\n}\n\nfunction showOrHidePagination(): void {\n    pageCount > 1 ? $(\".pagination\").show() : $('.pagination').hide();\n}"]}